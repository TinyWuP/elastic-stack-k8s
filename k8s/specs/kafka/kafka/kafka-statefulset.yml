apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "kafka"
  namespace: elastic
  labels:
    app: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  podManagementPolicy: "Parallel"
  replicas: 1
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      name: "kafka"
      labels:
        app: kafka
    spec:      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
      - name: "kafka"
        image: "docker.io/bitnami/kafka:2.2.0"
        imagePullPolicy: "Always"
        resources:
          limits:
            cpu: 350m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 200Mi
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper
        - name: KAFKA_PORT_NUMBER
          value: "9092"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://:$(KAFKA_PORT_NUMBER)"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: 'PLAINTEXT://$(MY_POD_NAME).kafka-headless.elastic:$(KAFKA_PORT_NUMBER)'
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_BROKER_ID
          value: "-1"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "false"
        - name: KAFKA_HEAP_OPTS
          value: "-Xmx1024m -Xms1024m"
        - name: KAFKA_LOG_FLUSH_INTERVAL_MESSAGES
          value: "10000"
        - name: KAFKA_LOG_FLUSH_INTERVAL_MS
          value: "1000"
        - name: KAFKA_LOG_RETENTION_BYTES
          value: "1073741824"
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVALS_MS
          value: "300000"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "24"
        - name: KAFKA_LOG_MESSAGE_FORMAT_VERSION
          value: ""
        - name: KAFKA_MAX_MESSAGE_BYTES
          value: "1000012"
        - name: KAFKA_SEGMENT_BYTES
          value: "1073741824"
        - name: KAFKA_LOGS_DIRS
          value: /opt/bitnami/kafka/data
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
          value: "https"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_NUM_IO_THREADS
          value: "8"
        - name: KAFKA_NUM_NETWORK_THREADS
          value: "3"
        - name: KAFKA_NUM_PARTITIONS
          value: "1"
        - name: KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR
          value: "1"
        - name: KAFKA_SOCKET_RECEIVE_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_SOCKET_REQUEST_MAX_BYTES
          value: "104857600"
        - name: KAFKA_SOCKET_SEND_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS
          value: "6000"
        ports:
        - name: kafka
          containerPort: 9092
        livenessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: premium-expansion-enabled
        resources:
          requests:
            storage: "10Gi"